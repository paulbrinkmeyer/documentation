WSL 2
---------------------------------------------------------------------------
wsl --install                        # installs WSL 2 with an ubuntu instance
wsl --install -d <DistName>          # install a specific online distro
ubuntu                               # start up WSL 2
wsl -l -v                            # list distros
wsl -l --online                      # list distros that can be downloaded
wsl -d <DistName>                    # start a specific distro
wsl -t <DistName>                    # stop (terminate) a speific distro
wsl --unregister <DistName>          # remove a distro
wsl --shutdown                       # shutdown all distros and close WSL 2
wsl --export <DistName> <FileName>   # export a distro to a tar file
wsl --import <DistName> <InstallFolder> <WSL2ImageTarball>   # import a distro from a tar file
e.g.
wsl --import ubuntu_2 ~/wsl_pkgs/ubuntu_2 ./ubuntu-21.04-server-cloudimg-amd64-wsl.rootfs.tar.gz

create another instance
------------------------------------
link: https://cloudbytes.dev/snippets/how-to-install-multiple-instances-of-ubuntu-in-wsl2


Install WSL 1
----------------------------------------------------------------------------------------
Source: https://docs.microsoft.com/en-us/windows/wsl/install-win10
* Run the following PowerShell command
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
* If installing WSL2 do the following
  - TBD
* restart computer

Windows CLI:
----------------------------------------------------------------------------------------
ubuntu                                             # start WSL
ubuntu config --default-user <NEW_DEFAULT_USER>    # Change default user from


WSL CLI common commands:
----------------------------------------------------------------------------------------
sudo apt-get update                               # update app get tool
sudo apt-get upgrade
sudo apt-get install python3.10
sudo apt-get install python-is-python3
sudo apt-get install python3-pip
selenium


GUI (!!! instructions under dev !!!)
----------------------------------------------------------------------------------------
Steps:
1. install and open MobaXterm
   a. make sure the "X server" is running in MobaXterm - icon in upper right of window
2. Open the WSL CLI
   - sudo apt update
   - sudo apt upgrade
   - sudo apt install nautilus
   - export DISPLAY=:0         # this can be added to the .bashrc file to eliminate this step each time
   - nautilus . &

... example troubleshooting: link: https://www.onwardpath.com/resources/how-to-solve-mobaxterm-x11-proxy-authorization-not-recognized-error
paul@HP-CND14651W8:~$ sudo nautilus
** (org.gnome.Nautilus:21669): WARNING **: 17:36:01.555: Error on getting connection: Failed to load SPARQL backend: Error spawning command line ?dbus-launch --autolaunch= --binary-syntax --close-stderr?: Child process exited with code 1
MoTTY X11 proxy: Unsupported authorisation protocol
Unable to init server: Could not connect: Connection refused
paul@HP-CND14651W8:~$ xauth list
HP-CND14651W8/unix:10  MIT-MAGIC-COOKIE-1  bf01d9d91e56e34910b4139b06478f11
HP-CND14651W8/unix:11  MIT-MAGIC-COOKIE-1  b7661a33f8c8a440cb06e0d352b05de5
paul@HP-CND14651W8:~$ sudo xauth add HP-CND14651W8/unix:10 MIT-MAGIC-COOKIE-1  b7661a33f8c8a440cb06e0d352b05de5
xauth:  file /root/.Xauthority does not exist
paul@HP-CND14651W8:~$ sudo xauth add HP-CND14651W8/unix:10 MIT-MAGIC-COOKIE-1  b7661a33f8c8a440cb06e0d352b05de5
paul@HP-CND14651W8:~$ sudo nautilus

   - sudo apt install ubuntu-desktop gnome

export DISPLAY=localhost:10.0


# install openssh: follow these steps: (tested on WSL 1 & 2)
----------------------------------------------------------------------------------------
sudo apt update
sudo apt remove openssh-server               # remove old version if it exists
sudo apt install openssh-server              # install current version
sudo vi /etc/ssh/sshd_config
  Add "Port 2222"                            # note: port 22 is hard to use in WSL
  Change "PasswordAuthentication yes"
  Add "AllowUsers <USER_NAME>"               # where <USER_NAME> is the user you want to have access
service ssh status                           # check status of SSH service
sudo service ssh start                       # start the service
sudo service ssh --full-restart              # if running already use this


# install Node.js on WSL 2
-----------------------------------------------------------------------------------------------------------------------
https://docs.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-wsl


# install docker on ubuntu 18.04.2 LTS
----------------------------------------------------------------------------------------
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io

# need to install docker in windows and turn on the localhost server
echo "export DOCKER_HOST=localhost:2375" >> ~/.bash_profile


# install python 3.8
---------------------------------------------------------------------------------------
# https://linuxize.com/post/how-to-install-python-3-8-on-ubuntu-18-04/
sudo apt update
sudo apt install software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa
sudo apt install python3.8